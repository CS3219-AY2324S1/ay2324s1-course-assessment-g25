# Sample workflow for building and deploying a Next.js site to GitHub Pages
# To get started with Next.js see: https://nextjs.org/docs/getting-started

# The name key defines the name of the workflow.
name: Deploy Next.js site to Pages

# The on key defines the events that triggers the workflow.
on:
  # The workflow_dispatch key defines a manual event,
  # which allows you to run a workflow manually. 
  workflow_dispatch:

   # The push key defines a Git push event, 
  # which triggers the workflow when you push commits to the repository.
  # push:
  #   branches: [ branch-* ]

  # The pull_request key defines a Git pull request event,
  # which triggers the workflow when you create or update a pull request.
  # pull_request:
  #   branches: [ master ]

# The permissions key defines the permissions policy for the workflow.
# contents: Read access to files in the repository
# pages: Access to publish to GitHub Pages
# id-token: Access to upload artifacts
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between 
# the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow 
# these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# The jobs key defines a set of jobs that are run in parallel.
jobs:
  # This key defines the name of the job.
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        node-version: [ 18.x ]

    # The runs-on key tells the job to run on a specific operating system.
    runs-on: ${{ matrix.platform }}

    # The env key sets environment variables for jobs and steps.
    env:
      working-directory: ./frontend

    steps:
      - name: Checkout
      # The uses key tells the job to retrieve the action named actions/checkout. 
      # This is an action that checks out your repository and downloads it to the runner, 
      # allowing you to run actions against your code (such as testing tools). 
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        # This step uses the actions/setup-node action to install the specified 
        # version of the Node.js software package on the runner, 
        # which gives you access to the npm command.
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ${{ env.working-directory }}/package-lock.json
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
          
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.working-directory }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
              
      - name: Install dependencies
      # The run key tells the job to execute a command on the runner. 
      # In this example, npm ci is used to install the npm software packages for the project.
        run: npm ci
        working-directory: ${{ env.working-directory }}

      - name: Build with Next.js
        run: npx --no-install next build
        working-directory: ${{ env.working-directory }}

      - name: Static HTML export with Next.js
        run: npx --no-install next export
        working-directory: ${{ env.working-directory }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ${{ env.working-directory }}/out

  # Deployment job
  deploy:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        node-version: [ 18.x ]

    # The runs-on key tells the job to run on a specific operating system.
    runs-on: ${{ matrix.platform }}

    # The env key sets environment variables for jobs and steps.
    env:
      working-directory: ./frontend

    # # The environment key sets environment variables that are available to 
    # # all jobs and steps in the workflow.
    # environment:
    #   # The environment name must only contain alphanumeric characters and underscores.
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}

    # The needs key lists any jobs that must complete successfully before
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
